{
  "name": "Augment Adam: Development Environment",
  "dockerComposeFile": "docker-compose.yml",
  "service": "dev",
  "workspaceFolder": "/workspace",

  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.10"
    }
  },

  // VS Code settings
  "customizations": {
    "vscode": {
      "extensions": [
        // Python development
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-python.isort",
        "matangover.mypy",

        // AI assistance
        "Augment.vscode-augment",
        "github.copilot",
        "github.copilot-chat",
        "github.copilot-labs",
        "google.geminicodeassist",

        // Jupyter and data science
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-toolsai.jupyter-renderers",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",

        // Docker and containers
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-wsl",

        // Database tools
        "cweijan.vscode-database-client2",
        "neo4j-extensions.neo4j-for-vscode",
        "redis-labs.redisinsight-vscode",

        // Git and collaboration
        "eamodio.gitlens",
        "mhutchie.git-graph",
        "github.vscode-pull-request-github",

        // Web development
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        "bradlc.vscode-tailwindcss",

        // Markdown and documentation
        "yzhang.markdown-all-in-one",
        "bierner.markdown-preview-github-styles",
        "davidanson.vscode-markdownlint",

        // Productivity and UI
        "usernamehw.errorlens",
        "gruntfuggly.todo-tree",
        "streetsidesoftware.code-spell-checker",
        "visualstudioexptteam.vscodeintellicode",
        "wayou.vscode-todo-highlight",
        "oderwat.indent-rainbow",

        // Testing
        "littlefoxteam.vscode-python-test-adapter",
        "ryanluker.vscode-coverage-gutters",

        // REST API development
        "humao.rest-client",
        "42crunch.vscode-openapi"
      ],
      "settings": {
        // Python settings
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.formatting.blackPath": "/usr/local/bin/black",
        "python.sortImports.path": "/usr/local/bin/isort",
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.nosetestsEnabled": false,
        "python.testing.pytestArgs": [
          "tests"
        ],

        // Editor settings
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true,
          "source.fixAll": true
        },
        "editor.rulers": [88, 100],
        "editor.suggestSelection": "first",
        "editor.bracketPairColorization.enabled": true,
        "editor.guides.bracketPairs": "active",
        "editor.renderWhitespace": "boundary",

        // Terminal settings
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash"
          }
        },

        // File exclusions
        "files.exclude": {
          "**/__pycache__": true,
          "**/.pytest_cache": true,
          "**/*.pyc": true,
          "**/.mypy_cache": true,
          "**/.coverage": true
        },

        // Jupyter settings
        "jupyter.notebookFileRoot": "/workspace",

        // Git settings
        "git.autofetch": true,
        "gitlens.codeLens.enabled": true,

        // Spell checker settings
        "cSpell.words": [
          "augment",
          "ollama",
          "chroma",
          "chromadb",
          "huggingface",
          "pylint",
          "pytest",
          "mypy",
          "isort",
          "flake8",
          "numpy",
          "pandas",
          "matplotlib",
          "sklearn",
          "tensorflow",
          "pytorch",
          "cuda"
        ]
      }
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "pip install --upgrade pip && pip install -r /workspace/requirements.txt && pip install black flake8 isort mypy pytest pytest-cov && chmod +x /workspace/scripts/*.py || echo 'Setup completed with warnings'",

  // Forward ports for services - only expose main container ports to host
  "forwardPorts": [8889],

  // Run commands after the container is created and started
  "postStartCommand": "bash .devcontainer/post-start.sh",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "vscode",

  // Environment variables
  "remoteEnv": {
    "PYTHONPATH": "${containerWorkspaceFolder}"
  }
}
