version: 0.3.2
project: augment-adam
principles:
  open_source: true
  local_first: true
  self_improving: true
  quality_focused: true
  asynchronous: true
  modular: true
  resilient: true
documentation:
  overview: README.md
  roadmap: PLANNING.md
  tasks: TASKS.md
  testing: TESTING.md
  onboarding: ONBOARDING.md  # Step 1: Add ONBOARDING.md
  changelog: CHANGELOG.md    # Step 1: Add CHANGELOG.md
  security: SECURITY.md      # Step 1: Add SECURITY.md
  code_of_conduct: CODE_OF_CONDUCT.md  # Step 1: Add CODE_OF_CONDUCT.md
  architecture: docs/architecture.md
  api:
    core: docs/api/core.md
    plugins: docs/api/plugins.md
    memory: docs/api/memory.md
    web: docs/api/web.md
    ai_agent:
      model_management: docs/api/ai_agent/model_management.md
    core:
      async_event_loops: docs/api/core/async_event_loops.md
      task_scheduling: docs/api/core/task_scheduling.md
  development: docs/development.md
  mcp:
    overview: docs/model-context-protocol.md
    docker_tools: docs/docker-mcp-tools.md
technology_stack:
  core_framework: DSPy
  model_hosting: Ollama
  vector_storage:
    - ChromaDB
    - FAISS
  development:
    - Poetry
    - Pytest
    - Sphinx
    - Black
    - Ruff
    - Mypy
    - Pre-commit
  interface:
    web:
      - Gradio
      - Streamlit
    terminal: Rich
  integration:
    mcp: true
mcp_integration:
  expertise: true
  client_integration: true
  server_development: true
  containerization: true
  standardized_tool_access: true
  docker_server:
    knowledge_graph: true
    github_integration: true
  mcp_clients: true
  custom_servers: true
  security_best_practices: true
  code_comment_usage: true
  monitor_ecosystem: true
  supabase_integration: true
current_development_focus:
  - implement_memory_system:
      types:
        - working
        - episodic
        - semantic
      dependencies:
        - chromadb
        - faiss
  - fix_remaining_tests:
      dependencies:
        - chromadb
        - gradio
        - bs4
        - uvicorn
  - implement_git_ide_integration:
      features:
        - code_analysis
        - commit_management
        - branch_management
  - build_web_interface:
      frameworks:
        - gradio
        - streamlit
  - optimize_model_inference:
      techniques:
        - quantization
        - caching
        - batching
  - enhance_parallel_execution:
      resource_types: more
  - improve_task_scheduler:
      scheduling_options: more
  - integrate_mcp_tools_knowledge_graph: true
  - implement_github_integration_mcp: true
code_quality:
  documentation:
    style: google
    type_hints: true
  testing:
    coverage: ">90%"
    types:
      - unit
      - integration
      - e2e
  mocking:
    tag: '# @mocked-in-tests'
  linting:
    - Black
    - Ruff
    - Mypy
  pre_commit: true
development_workflow:
  documentation_driven: true
  test_driven: true
  implementation_loop: true
  regular_optimization: true
  adapt_tests_to_code: true
  tool_integration: mcp
completed_milestones:
  - model_management_framework:
      features:
        - model_downloading
        - model_loading
        - model_type_inference
        - prompt_formatting
        - response_cleaning
      documentation: docs/api/ai_agent/model_management.md
  - async_event_loop_handling:
      features:
        - proper_event_loop_management
        - event_loop_documentation
        - test_fixture_configuration
      documentation: docs/api/core/async_event_loops.md
  - plugin_architecture_foundation: true
  - cli_interface_basic: true
  - async_task_queue: true
  - web_interface_gradio: true
  - comprehensive_test_suite: true
  - async_assistant_task_queue: true
  - task_queue_persistence: true
  - enhanced_error_handling: true
  - improved_test_coverage: 80
  - parallel_task_execution_dependencies: true
  - resource_management_parallel_execution: true
  - circuit_breakers_external_dependencies: true
  - task_scheduling:
      types:
        - periodic
        - one_time
  - initial_mcp_integration_tool_access: true
project_memory_graph:
  storage:
    - ChromaDB
    - MCP
  coverage:
    codebase: true
    documentation: true
    test_suite: true
  entities:
    - major_components
    - directories
    - key_files
  relationships:
    - uses
    - connects_to
    - exposes_endpoints_for
  auto_update: true
  queryable: true
  onboarding: true
  self_improvement: true
  details:
    - docs/
    - context_engine/
    - dukat/
    - mcp_context_engine/
    - api/
    - test_generator/
    - worker/
    - tests/
    - config/
    - models/
    - scripts/
    - templates/
    - frameworks/
    - resources/
    - neo4j-config/
    - redis-config/
    - examples/
tags:  # Step 2: Add tags section
  README.md: [overview, entrypoint]
  PLANNING.md: [roadmap, planning]
  TASKS.md: [tasks, actionable]
  TESTING.md: [testing, coverage, ci]
  ONBOARDING.md: [onboarding, agent, quickstart]
  CHANGELOG.md: [changelog, history]
  SECURITY.md: [security, policy]
  CODE_OF_CONDUCT.md: [community, conduct]
  docs/architecture.md: [architecture, design]
  docs/api/core.md: [api, core]
  docs/api/plugins.md: [api, plugins]
  docs/api/memory.md: [api, memory]
  docs/api/web.md: [api, web]
  docs/api/core/async_event_loops.md: [api, core, async, event_loops]
  docs/api/core/task_scheduling.md: [api, core, task, scheduling]
  docs/api/ai_agent/model_management.md: [api, ai_agent, model, management]
  docs/development.md: [development, guide]
  docs/model-context-protocol.md: [mcp, protocol]
  docs/docker-mcp-tools.md: [mcp, docker]
last_updated:
  ONBOARDING.md: 2025-04-23
  CHANGELOG.md: 2025-04-23
  SECURITY.md: 2025-04-23
  CODE_OF_CONDUCT.md: 2025-04-23
  PLANNING.md: 2025-04-23
  TASKS.md: 2025-04-23
  TESTING.md: 2025-04-24
  docs/api/core/async_event_loops.md: 2025-04-24
  docs/api/core/task_scheduling.md: 2025-04-24
  docs/api/ai_agent/model_management.md: 2025-04-24
last_updated: 2025-04-24
